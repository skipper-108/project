{
  "info": {
    "name": "Inventory Management Tool API",
    "description": "Complete API collection for the Inventory Management Tool",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        }
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.test('User registered successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "} else if (pm.response.code === 409) {",
                  "    pm.test('Username already exists', function () {",
                  "        pm.response.to.have.status(409);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('Login successful', function () {",
                  "        pm.response.to.have.status(200);",
                  "        const responseJson = pm.response.json();",
                  "        if (responseJson.data && responseJson.data.token) {",
                  "            pm.collectionVariables.set('auth_token', responseJson.data.token);",
                  "        }",
                  "    });",
                  "} else if (pm.response.code === 401) {",
                  "    pm.test('Invalid credentials', function () {",
                  "        pm.response.to.have.status(401);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    pm.test('Product created successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "        const responseJson = pm.response.json();",
                  "        if (responseJson.data && responseJson.data.id) {",
                  "            pm.collectionVariables.set('product_id', responseJson.data.id);",
                  "        }",
                  "    });",
                  "} else if (pm.response.code === 409) {",
                  "    pm.test('Product with this SKU already exists', function () {",
                  "        pm.response.to.have.status(409);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"iPhone 15 Pro\",\n  \"type\": \"Electronics\",\n  \"sku\": \"IPH15PRO001\",\n  \"imageUrl\": \"https://example.com/iphone15pro.jpg\",\n  \"description\": \"Latest iPhone model with advanced features\",\n  \"quantity\": 50,\n  \"price\": 999.99\n}"
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Products retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.expect(responseJson.data).to.have.property('products');",
                  "    pm.expect(responseJson.data).to.have.property('total');",
                  "    pm.expect(responseJson.data).to.have.property('page');",
                  "    pm.expect(responseJson.data).to.have.property('limit');",
                  "    pm.expect(responseJson.data).to.have.property('totalPages');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Product Quantity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('Product quantity updated successfully', function () {",
                  "        pm.response.to.have.status(200);",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson.data.quantity).to.eql(25);",
                  "    });",
                  "} else if (pm.response.code === 404) {",
                  "    pm.test('Product not found', function () {",
                  "        pm.response.to.have.status(404);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 25\n}"
            },
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}/quantity",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}", "quantity"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Unauthorized Access",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Unauthorized access blocked', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Product Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid data validation', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"type\": \"Electronics\",\n  \"sku\": \"INV\",\n  \"quantity\": -5,\n  \"price\": -10.0\n}"
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          },
          "response": []
        }
      ]
    }
  ]
} 